name: Notify Discord on PR Comment

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]   

env:
  WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}

jobs:
  notify_discord:
    runs-on: ubuntu-latest
    if: github.event != null
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up jq
        run: sudo apt-get install jq
        
      - name: Debag get notification to Discord
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
          PR_URL: ${{ github.event.pull_request.html_url || github.event.issue.pull_request.html_url }}
        run: |
          # コメントからGitHubアカウント名を抽出（例: @username）
          GITHUB_USERNAMES=$(echo "$COMMENT_BODY" | grep -oP '@[\w.-]+' || echo "")
          
          # メンションされているか調べる．できなかったら処理終了
          if [ -z "$GITHUB_USERNAMES" ]; then
            echo "No mentions found in the comment."
            exit 0
          fi

          # GITHUB_USERNAMESをもとに，JSONから各DISCORD_USER_IDを取得し，1行の空白区切りに整える
          DISCORD_USER_IDS=$(echo "$GITHUB_USERNAMES" | while read -r GITHUB_USERNAME; do
          jq -r ".\"$GITHUB_USERNAME\" // \"\"" < ./username.json
          done | tr '\n' ' ')
          echo "DISCORD_USER_IDS=${{ DISCORD_USER_IDS }}" >> $GITHUB_ENV
          
      - name: Debug send notification to Discord
        env : 
          DISCORD_USER_IDS : ${{ env.DISCORD_USER_IDS || "" }}
        run : |
          echo $"DISCORD_USER_IDS"
          # Discordで紐付けされたアカウントのメンションが見つかった場合のみ通知を送信
          if [ -n "$DISCORD_USER_IDS" ]; then
            #空白区切りの文字列を<@id>という形になるように整形
            MENTION_STRING=$(echo "$DISCORD_USER_IDS" | xargs | sed 's/ /> <@/g')
            MENTION_STRING="<@$MENTION_STRING>"
            echo "Mention found, sending notification to <@$DISCORD_USER_ID>..."
          else
            echo "No valid GitHub username found, skipping notification."
          fi
